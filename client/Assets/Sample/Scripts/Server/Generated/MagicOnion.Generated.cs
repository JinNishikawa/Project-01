//// <auto-generated />
//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 219
//#pragma warning disable 168

//// NOTE: Disable warnings for nullable reference types.
//// `#nullable disable` causes compile error on old C# compilers (-7.3)
//#pragma warning disable 8603 // Possible null reference return.
//#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
//#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

//namespace MagicOnion
//{
//    using global::System;
//    using global::System.Collections.Generic;
//    using global::System.Linq;
//    using global::MagicOnion;
//    using global::MagicOnion.Client;

//    public static partial class MagicOnionInitializer
//    {
//        static bool isRegistered = false;

//#if UNITY_2019_4_OR_NEWER
//        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad)]
//#elif NET5_0_OR_GREATER
//        [System.Runtime.CompilerServices.ModuleInitializer]
//#endif
//        public static void Register()
//        {
//            if (isRegistered) return;
//            isRegistered = true;

//            global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default =
//                (global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider immutableMagicOnionClientFactoryProvider)
//                    ? immutableMagicOnionClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
//                    : new global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);

//            global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default =
//                (global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider immutableStreamingHubClientFactoryProvider)
//                    ? immutableStreamingHubClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
//                    : new global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);
//        }
//    }

//    public partial class MagicOnionGeneratedClientFactoryProvider : global::MagicOnion.Client.IMagicOnionClientFactoryProvider, global::MagicOnion.Client.IStreamingHubClientFactoryProvider
//    {
//        public static MagicOnionGeneratedClientFactoryProvider Instance { get; } = new MagicOnionGeneratedClientFactoryProvider();

//        MagicOnionGeneratedClientFactoryProvider() {}

//        bool global::MagicOnion.Client.IMagicOnionClientFactoryProvider.TryGetFactory<T>(out global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> factory)
//            => (factory = MagicOnionClientFactoryCache<T>.Factory) != null;

//        bool global::MagicOnion.Client.IStreamingHubClientFactoryProvider.TryGetFactory<TStreamingHub, TReceiver>(out global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> factory)
//            => (factory = StreamingHubClientFactoryCache<TStreamingHub, TReceiver>.Factory) != null;

//        static class MagicOnionClientFactoryCache<T> where T : global::MagicOnion.IService<T>
//        {
//            public readonly static global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> Factory;

//            static MagicOnionClientFactoryCache()
//            {
//                object factory = default(global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>);

//                Factory = (global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>)factory;
//            }
//        }
        
//        static class StreamingHubClientFactoryCache<TStreamingHub, TReceiver> where TStreamingHub : global::MagicOnion.IStreamingHub<TStreamingHub, TReceiver>
//        {
//            public readonly static global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> Factory;

//            static StreamingHubClientFactoryCache()
//            {
//                object factory = default(global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>);

//                if (typeof(TStreamingHub) == typeof(global::Shared.Sample.IPlayerHub) && typeof(TReceiver) == typeof(global::Shared.Sample.IPlayerHubReceiver))
//                {
//                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::Shared.Sample.IPlayerHub, global::Shared.Sample.IPlayerHubReceiver>)((a, _, b, c, d, e) => new Shared.Sample.PlayerHubClient(a, b, c, d, e)));
//                }

//                Factory = (global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>)factory;
//            }
//        }
//    }

//}

//#pragma warning restore 168
//#pragma warning restore 219
//#pragma warning restore 414
//#pragma warning restore 612
//#pragma warning restore 618

//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 219
//#pragma warning disable 168

//// NOTE: Disable warnings for nullable reference types.
//// `#nullable disable` causes compile error on old C# compilers (-7.3)
//#pragma warning disable 8603 // Possible null reference return.
//#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
//#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.
//namespace MagicOnion.Resolvers
//{
//    using global::System;
//    using global::MessagePack;

//    partial class PreserveAttribute : global::System.Attribute {}
//    public class MagicOnionResolver : global::MessagePack.IFormatterResolver
//    {
//        public static readonly global::MessagePack.IFormatterResolver Instance = new MagicOnionResolver();
    
//        MagicOnionResolver() {}
    
//        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
//            => FormatterCache<T>.formatter;
    
//        static class FormatterCache<T>
//        {
//            public static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> formatter;
    
//            static FormatterCache()
//            {
//                var f = MagicOnionResolverGetFormatterHelper.GetFormatter(typeof(T));
//                if (f != null)
//                {
//                    formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
//                }
//            }
//        }
//    }
//    internal static class MagicOnionResolverGetFormatterHelper
//    {
//        static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;
    
//        static MagicOnionResolverGetFormatterHelper()
//        {
//            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(5)
//            {
//                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>), 0 },
//                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>), 1 },
//                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>), 2 },
//                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>), 3 },
//                {typeof(global::Shared.Sample.MessagePack.Player[]), 4 },
//            };
//        }
//        internal static object GetFormatter(Type t)
//        {
//            int key;
//            if (!lookup.TryGetValue(t, out key))
//            {
//                return null;
//            }
        
//            switch (key)
//            {
//                case 0: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>(default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::UnityEngine.Vector3));
//                case 1: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>(default(global::System.Int32), default(global::System.Int32), default(global::UnityEngine.Vector3));
//                case 2: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32>(default(global::System.Int32), default(global::System.Int32));
//                case 3: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::UnityEngine.Vector3>(default(global::System.Int32), default(global::UnityEngine.Vector3));
//                case 4: return new global::MessagePack.Formatters.ArrayFormatter<global::Shared.Sample.MessagePack.Player>();
//                default: return null;
//            }
//        }
//    }
//    /// <summary>Type hints for Ahead-of-Time compilation.</summary>
//    [MagicOnion.Resolvers.Preserve]
//    internal static class TypeHints
//    {
//        [MagicOnion.Resolvers.Preserve]
//        internal static void Register()
//        {
//            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::MessagePack.Nil>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::Shared.Sample.MessagePack.Player>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::Shared.Sample.MessagePack.Player[]>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Int32>();
//            _ = MagicOnionResolver.Instance.GetFormatter<global::UnityEngine.Vector3>();
//        }
//    }
//}
//#pragma warning restore 168
//#pragma warning restore 219
//#pragma warning restore 414
//#pragma warning restore 612
//#pragma warning restore 618

//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 219
//#pragma warning disable 168

//// NOTE: Disable warnings for nullable reference types.
//// `#nullable disable` causes compile error on old C# compilers (-7.3)
//#pragma warning disable 8603 // Possible null reference return.
//#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
//#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.


//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 219
//#pragma warning disable 168

//// NOTE: Disable warnings for nullable reference types.
//// `#nullable disable` causes compile error on old C# compilers (-7.3)
//#pragma warning disable 8603 // Possible null reference return.
//#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
//#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

//namespace Shared.Sample
//{
//    using global::System;
//    using global::Grpc.Core;
//    using global::MagicOnion;
//    using global::MagicOnion.Client;
//    using global::MessagePack;
    
//    [global::MagicOnion.Ignore]
//    public class PlayerHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::Shared.Sample.IPlayerHub, global::Shared.Sample.IPlayerHubReceiver>, global::Shared.Sample.IPlayerHub
//    {
//        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
//        public PlayerHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
//            : base(callInvoker, host, options, serializerProvider, logger)
//        {
//            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
//            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IPlayerHub", "Connect", marshaller, marshaller);
//        }
        
//        public global::System.Threading.Tasks.ValueTask<global::System.Int32> JoinAsync()
//            => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(-733403293, global::MessagePack.Nil.Default));
//        public global::System.Threading.Tasks.ValueTask<global::Shared.Sample.MessagePack.Player[]> FetchCurrentPlayerAsync()
//            => new global::System.Threading.Tasks.ValueTask<global::Shared.Sample.MessagePack.Player[]>(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::Shared.Sample.MessagePack.Player[]>(1930288123, global::MessagePack.Nil.Default));
//        public global::System.Threading.Tasks.ValueTask LeaveAsync()
//            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1368362116, global::MessagePack.Nil.Default));
//        public global::System.Threading.Tasks.ValueTask SummonPawn(global::System.Int32 typeId, global::UnityEngine.Vector3 position)
//            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>, global::MessagePack.Nil>(441487168, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>(typeId, position)));
        
//        public global::Shared.Sample.IPlayerHub FireAndForget()
//            => new FireAndForgetClient(this);
        
//        [global::MagicOnion.Ignore]
//        class FireAndForgetClient : global::Shared.Sample.IPlayerHub
//        {
//            readonly PlayerHubClient parent;
        
//            public FireAndForgetClient(PlayerHubClient parent)
//                => this.parent = parent;
        
//            public global::Shared.Sample.IPlayerHub FireAndForget() => this;
//            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
//            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
//            public global::System.Threading.Tasks.ValueTask<global::System.Int32> JoinAsync()
//                => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(-733403293, global::MessagePack.Nil.Default));
//            public global::System.Threading.Tasks.ValueTask<global::Shared.Sample.MessagePack.Player[]> FetchCurrentPlayerAsync()
//                => new global::System.Threading.Tasks.ValueTask<global::Shared.Sample.MessagePack.Player[]>(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::Shared.Sample.MessagePack.Player[]>(1930288123, global::MessagePack.Nil.Default));
//            public global::System.Threading.Tasks.ValueTask LeaveAsync()
//                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1368362116, global::MessagePack.Nil.Default));
//            public global::System.Threading.Tasks.ValueTask SummonPawn(global::System.Int32 typeId, global::UnityEngine.Vector3 position)
//                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>, global::MessagePack.Nil>(441487168, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>(typeId, position)));
            
//        }
        
//        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
//        {
//            switch (methodId)
//            {
//                case -1406432752: // Void OnPlayerJoined(global::System.Int32 id, global::UnityEngine.Vector3 position)
//                    {
//                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>>(data);
//                        receiver.OnPlayerJoined(value.Item1, value.Item2);
//                    }
//                    break;
//                case 1665602028: // Void OnPlayerLeaved(global::System.Int32 id)
//                    {
//                        var value = base.Deserialize<global::System.Int32>(data);
//                        receiver.OnPlayerLeaved(value);
//                    }
//                    break;
//                case 1290924816: // Void OnPlayerMoved(global::System.Int32 id, global::UnityEngine.Vector3 position)
//                    {
//                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::UnityEngine.Vector3>>(data);
//                        receiver.OnPlayerMoved(value.Item1, value.Item2);
//                    }
//                    break;
//                case -920069936: // Void OnSummonedPawn(global::System.Int32 ownerId, global::System.Int32 pawnId, global::System.Int32 typeId, global::UnityEngine.Vector3 position)
//                    {
//                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>>(data);
//                        receiver.OnSummonedPawn(value.Item1, value.Item2, value.Item3, value.Item4);
//                    }
//                    break;
//                case 1671488021: // Void OnPawnMoved(global::System.Int32 ownerId, global::System.Int32 pawnId, global::UnityEngine.Vector3 position)
//                    {
//                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::UnityEngine.Vector3>>(data);
//                        receiver.OnPawnMoved(value.Item1, value.Item2, value.Item3);
//                    }
//                    break;
//                case 882836548: // Void OnPawnDied(global::System.Int32 ownerId, global::System.Int32 pawnId)
//                    {
//                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>>(data);
//                        receiver.OnPawnDied(value.Item1, value.Item2);
//                    }
//                    break;
//            }
//        }
        
//        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
//        {
//            switch (methodId)
//            {
//                case -733403293: // ValueTask<Int32> JoinAsync()
//                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
//                    break;
//                case 1930288123: // ValueTask<Player[]> FetchCurrentPlayerAsync()
//                    base.SetResultForResponse<global::Shared.Sample.MessagePack.Player[]>(taskCompletionSource, data);
//                    break;
//                case 1368362116: // ValueTask LeaveAsync()
//                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
//                    break;
//                case 441487168: // ValueTask SummonPawn(global::System.Int32 typeId, global::UnityEngine.Vector3 position)
//                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
//                    break;
//            }
//        }
        
//    }
//}


