//// <auto-generated>
//// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
//// </auto-generated>

//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 168
//#pragma warning disable CS1591 // document public APIs

//#pragma warning disable SA1312 // Variable names should begin with lower-case letter
//#pragma warning disable SA1649 // File name should match first type name

//namespace MessagePack.Resolvers
//{
//    public class GeneratedResolver : global::MessagePack.IFormatterResolver
//    {
//        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

//        private GeneratedResolver()
//        {
//        }

//        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
//        {
//            return FormatterCache<T>.Formatter;
//        }

//        private static class FormatterCache<T>
//        {
//            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

//            static FormatterCache()
//            {
//                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
//                if (f != null)
//                {
//                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
//                }
//            }
//        }
//    }

//    internal static class GeneratedResolverGetFormatterHelper
//    {
//        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;

//        static GeneratedResolverGetFormatterHelper()
//        {
//            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(1)
//            {
//                { typeof(global::Shared.Sample.MessagePack.Player), 0 },
//            };
//        }

//        internal static object GetFormatter(global::System.Type t)
//        {
//            int key;
//            if (!lookup.TryGetValue(t, out key))
//            {
//                return null;
//            }

//            switch (key)
//            {
//                case 0: return new MessagePack.Formatters.Shared.Sample.MessagePack.PlayerFormatter();
//                default: return null;
//            }
//        }
//    }
//}

//#pragma warning restore 168
//#pragma warning restore 414
//#pragma warning restore 618
//#pragma warning restore 612

//#pragma warning restore SA1312 // Variable names should begin with lower-case letter
//#pragma warning restore SA1649 // File name should match first type name




//// <auto-generated>
//// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
//// </auto-generated>

//#pragma warning disable 618
//#pragma warning disable 612
//#pragma warning disable 414
//#pragma warning disable 168
//#pragma warning disable CS1591 // document public APIs

//#pragma warning disable SA1129 // Do not use default value type constructor
//#pragma warning disable SA1309 // Field names should not begin with underscore
//#pragma warning disable SA1312 // Variable names should begin with lower-case letter
//#pragma warning disable SA1403 // File may only contain a single namespace
//#pragma warning disable SA1649 // File name should match first type name

//namespace MessagePack.Formatters.Shared.Sample.MessagePack
//{
//    public sealed class PlayerFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Shared.Sample.MessagePack.Player>
//    {

//        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Shared.Sample.MessagePack.Player value, global::MessagePack.MessagePackSerializerOptions options)
//        {
//            if (value == null)
//            {
//                writer.WriteNil();
//                return;
//            }

//            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
//            writer.WriteArrayHeader(2);
//            writer.Write(value.Id);
//            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::UnityEngine.Vector3>(formatterResolver).Serialize(ref writer, value.Position, options);
//        }

//        public global::Shared.Sample.MessagePack.Player Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
//        {
//            if (reader.TryReadNil())
//            {
//                return null;
//            }

//            options.Security.DepthStep(ref reader);
//            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
//            var length = reader.ReadArrayHeader();
//            var __Id__ = default(int);
//            var __Position__ = default(global::UnityEngine.Vector3);

//            for (int i = 0; i < length; i++)
//            {
//                switch (i)
//                {
//                    case 0:
//                        __Id__ = reader.ReadInt32();
//                        break;
//                    case 1:
//                        __Position__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::UnityEngine.Vector3>(formatterResolver).Deserialize(ref reader, options);
//                        break;
//                    default:
//                        reader.Skip();
//                        break;
//                }
//            }

//            var ____result = new global::Shared.Sample.MessagePack.Player(__Id__, __Position__);
//            reader.Depth--;
//            return ____result;
//        }
//    }

//}

//#pragma warning restore 168
//#pragma warning restore 414
//#pragma warning restore 618
//#pragma warning restore 612

//#pragma warning restore SA1129 // Do not use default value type constructor
//#pragma warning restore SA1309 // Field names should not begin with underscore
//#pragma warning restore SA1312 // Variable names should begin with lower-case letter
//#pragma warning restore SA1403 // File may only contain a single namespace
//#pragma warning restore SA1649 // File name should match first type name

